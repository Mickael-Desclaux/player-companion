// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  email         String     @unique
  name          String?
  image         String?
  role          Role     @default(PLAYER)
  emailVerified DateTime?
  createdAt     DateTime   @default(now())
  accounts      Account[]
  sessions      Session[]
  character     Character?
  notes         Note[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Character {
  id             String @id @default(cuid())
  userId         String @unique @map("user_id")
  name           String
  characterClass String @map("class")
  race           String
  level          Int
  picture        String
  sheet          String

  user User @relation(fields: [userId], references: [id])
}

model Note {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  title     String
  content   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id])
}

enum Role {
  PLAYER
  ADMIN
}
